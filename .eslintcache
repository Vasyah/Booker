[{"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\index.js":"1","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Root.jsx":"2","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceList.jsx":"3","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Service.jsx":"4","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\index.js":"5","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\ServiceForm.jsx":"6","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\index.js":"7","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\api\\index.js":"8","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\MyInput.jsx":"9","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\index.js":"10","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\Button.jsx":"11","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\index.js":"12","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\index.js":"13","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\WorkdaysForm\\index.js":"14","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\index.js":"15","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\WorkdaysForm\\WorkdaysForm.jsx":"16","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\Workdays.jsx":"17","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\Calendar\\Calendar.jsx":"18","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\CalendarAdmin\\CalendarAdmin.jsx":"19"},{"size":277,"mtime":1611737037857,"results":"20","hashOfConfig":"21"},{"size":528,"mtime":1611751747292,"results":"22","hashOfConfig":"21"},{"size":5754,"mtime":1611729410922,"results":"23","hashOfConfig":"21"},{"size":2135,"mtime":1611735738423,"results":"24","hashOfConfig":"21"},{"size":40,"mtime":1611311118401,"results":"25","hashOfConfig":"21"},{"size":4486,"mtime":1611726329314,"results":"26","hashOfConfig":"21"},{"size":40,"mtime":1611317089222,"results":"27","hashOfConfig":"21"},{"size":128,"mtime":1611397346506,"results":"28","hashOfConfig":"21"},{"size":1143,"mtime":1611741949177,"results":"29","hashOfConfig":"21"},{"size":36,"mtime":1611404561979,"results":"30","hashOfConfig":"21"},{"size":873,"mtime":1611662321473,"results":"31","hashOfConfig":"21"},{"size":36,"mtime":1611311868074,"results":"32","hashOfConfig":"21"},{"size":35,"mtime":1611468538889,"results":"33","hashOfConfig":"21"},{"size":41,"mtime":1611739892786,"results":"34","hashOfConfig":"21"},{"size":37,"mtime":1611739659753,"results":"35","hashOfConfig":"21"},{"size":6009,"mtime":1611746183561,"results":"36","hashOfConfig":"21"},{"size":469,"mtime":1611749678993,"results":"37","hashOfConfig":"21"},{"size":950,"mtime":1611809399198,"results":"38","hashOfConfig":"21"},{"size":1004,"mtime":1611754600230,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10wejds",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\index.js",[],["86","87"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Root.jsx",[],["88","89"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceList.jsx",["90","91"],"import React from 'react';\r\nimport st from './ServiceList.module.scss';\r\n\r\nimport Service from './Service';\r\nimport ServiceForm from './ServiceForm';\r\n// import Button from './../Button'\r\nimport classNames from 'classnames';\r\nimport axiosConfig from '../../api/';\r\n\r\nclass ServiceList extends React.Component {\r\n\r\n    state = { services: [] };\r\n    // для сохранения контекста делаем метод - стрелочной функцией\r\n    addService = (service) => {\r\n        // если хотя бы одно поле пустое - то не пишем\r\n        // задать типы\r\n        console.log(service);\r\n        axiosConfig\r\n            .post('/services', service)\r\n            .then(res => {\r\n                console.log(res);\r\n                const service = res.data.data;\r\n                this.setState(prevState => ({\r\n                    services: [\r\n                        ...prevState.services,\r\n                        { ...service }\r\n                    ]\r\n                }));\r\n                if (res.status === \"OK\") return true;\r\n            })\r\n    }\r\n\r\n    editService = (service) => {\r\n        console.log(service);\r\n        axiosConfig\r\n            .patch(`/services/${service.id}`, service)\r\n            .then(res => {\r\n                const serviceData = res.data.data;\r\n                const { id } = serviceData;\r\n                const newState = this.state.services.map((s) => {\r\n                    if (s.id === id) return s = serviceData;\r\n                    return s;\r\n                });\r\n                this.setState({\r\n                    services: [...newState]\r\n                });\r\n                if (res.status === \"OK\") return true;\r\n            });\r\n    }\r\n    deleteService = (id) => {\r\n        const data = { id };\r\n        axiosConfig\r\n            .delete(`/services/${id}`)\r\n            .then(res => {\r\n                const newState = this.state.services.filter((s) => {\r\n                    return s.id !== id;\r\n                });\r\n                newState.length ? this.setState({ services: [...newState] }) :\r\n                    this.setState({ services: [] });\r\n            });\r\n\r\n    }\r\n    // saveService() {\r\n\r\n    // }\r\n    componentDidMount() {\r\n        axiosConfig\r\n            .get('/services').then(response => {\r\n                console.log(response.data.data);\r\n                this.setState({ services: response.data.data });\r\n            })\r\n            .catch(() => this.setState({ message: 'NETWORK_ERROR', loading: false }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={st.container}>\r\n                <h3 className={st.title}>Добавьте свои услуги</h3>\r\n                <ServiceForm addService={this.addService} />\r\n                <div className={st.grid}>\r\n                    <Service\r\n                        isEditable={false}\r\n                        title=\"Название услуги\"\r\n                        time=\"Длительность\"\r\n                        price=\"Стоимость\"\r\n                    />\r\n                    {this.state.services.length === 0 && <div className={st.emptyModal}>\"ЭТО ПУСТОЕ СООБЩЕНИЕ\"</div>}\r\n                    {this.state.services.map(({ id, title, time, price }) => (\r\n                        <Service\r\n                            deleteService={this.deleteService}\r\n                            editService={this.editService}\r\n                            isEditable={true}\r\n                            isEdit={true}\r\n                            title={title}\r\n                            time={time}\r\n                            price={price}\r\n                            key={id}\r\n                            id={id}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                {/* <saveButton/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ServiceList;\r\n\r\n\r\n\r\n\r\n\r\n    // // state = { tasks };\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state =  { tasks };\r\n    // }\r\n    // filterActive = () => {\r\n    //     const activeTasks = this.state.tasks.filter(task => !task.completed);\r\n    //     this.setState({ tasks: activeTasks });\r\n    // }\r\n\r\n    // toggleCompleted = (event) => {\r\n    //     const { tasks } = this.state;\r\n    //     const id = Number(event.target.dataset.id);\r\n    //     const updatedTasks = tasks.map(task => {\r\n    //         if (task.id === id) {\r\n    //             task.completed = !task.completed\r\n    //         }\r\n    //         return task;\r\n    //     });\r\n    //     this.setState({ tasks: updatedTasks });\r\n    // }\r\n\r\n    // addTask = title => {\r\n    //     this.setState(prevState => ({\r\n    //         // взяли старый объект и записали новй\r\n    //         // но затем будем делать запросы на сервак\r\n    //         tasks: [\r\n    //             ...prevState.tasks,\r\n    //             { id: Math.random(), title, completed: false }\r\n    //         ]\r\n    //     }))\r\n    // }\r\n    // render() {\r\n    //     return (\r\n    //         <div className=\"tasks-list\">\r\n    //             <TaskForm addTask={this.addTask} />\r\n    //             {this.state.tasks.map(({ title, completed, id }) => (\r\n    //                 <Task\r\n    //                     title={title}\r\n    //                     completed={completed}\r\n    //                     toggleCompleted={this.toggleCompleted}\r\n    //                     id={id}\r\n    //                     key={id}\r\n    //                 />\r\n    //             ))}\r\n    //             <Button label=\"Выполненны\" onClick={this.filterActive} />\r\n    //         </div>\r\n    //     );\r\n    // }","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Service.jsx",["92","93"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport st from './Service.module.scss';\r\n\r\nimport Button from './Button';\r\nimport ServiceForm from '../ServiceForm';\r\nimport classNames from 'classnames';\r\nclass Service extends React.Component {\r\n    state = { isEdit: false };\r\n    editToggle = (e) => {\r\n        const { isEdit } = this.state;\r\n        this.setState({ isEdit: !isEdit });\r\n    }\r\n    deleteService = () => {\r\n        const { id, deleteService } = this.props;\r\n        deleteService(id);\r\n    }\r\n\r\n    render() {\r\n        const { title, time, price, editService, id } = this.props;\r\n        const { isEdit } = this.state;\r\n        const { isEditable } = this.props;\r\n        return (\r\n            <>\r\n                {isEdit ? <ServiceForm editToggle={this.editToggle} id={id} editService={editService} isEdit={isEdit} handler={this.handler} /> :\r\n                    <div className={classNames(`${st.flex}`, `${st.flexAC}`)}>\r\n                        <div className={st.grid} >\r\n                            <div className=\"\">{title}</div>\r\n                            <div className=\"\">{time}</div>\r\n                            <div className=\"\">{price}</div>\r\n                            <span className={classNames(`${st.flex} ${st.abs}`)}>\r\n                                {/* для отображения с  полями редактирования/удаления */}\r\n                                {isEditable && <button data-type=\"edit\" onClick={this.editToggle} className={classNames(`${st.btn}`, `${st.btn__edit}`)}>🔧</button>}\r\n                                {isEditable && <button data-type=\"delete\" onClick={this.deleteService} className={classNames(`${st.btn}`, `${st.btn__delete}`)}>❌</button>}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nService.propTypes = {\r\n    // title: PropTypes.string.isRequired,\r\n    // time: PropTypes.number.isRequired,\r\n    // price: PropTypes.number.isRequired,\r\n    // id: PropTypes.number.isRequired\r\n}\r\nexport default Service;\r\n",["94","95"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\index.js",[],["96","97"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\ServiceForm.jsx",["98","99","100","101"],"import React from 'react';\r\nimport MyInput from '../../MyInput';\r\nimport PropTypes from 'prop-types';\r\nimport st from './ServiceForm.module.scss';\r\nimport Formsy, { addValidationRule } from 'formsy-react'\r\n\r\nimport { useState } from 'react';\r\n\r\nconst errors = {\r\n    isEmail: 'You have to type a valid email',\r\n    maxLength: 'You cannot type more than 25 characters',\r\n    minLength: 'You must type more than 6 characters',\r\n    isAlpha: 'You can only type letters',\r\n    equalsField: 'Password is not match',\r\n    isStrong: 'Your password is not strong',\r\n    isNumeric: \"Чувак, введи число\"\r\n}\r\n\r\nclass ServiceForm extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        time: '',\r\n        price: '',\r\n        canSubmit: false\r\n    };\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n    }\r\n\r\n    addService = () => {\r\n        const data = this.state;\r\n        const { addService } = this.props;\r\n        this.setState({\r\n            title: '',\r\n            time: '',\r\n            price: ''\r\n        });\r\n        addService(data);\r\n    }\r\n\r\n    disableButton = () => {\r\n        console.log(\"DISABLED\");\r\n        this.setState({ canSubmit: false })\r\n    }\r\n    enableButton = () => {\r\n        console.log(\"ENABLED\");\r\n        this.setState({ canSubmit: true })\r\n    }\r\n    onSubmitEdit = (model) => {\r\n        const { editService } = this.props;\r\n        model.id = this.props.id;\r\n        const { editToggle } = this.props;\r\n        editToggle();\r\n        this.setState({ isEdit: false });\r\n        editService(model)\r\n        console.log(\"form posted\", model)\r\n    }\r\n    onSubmit = (model) => {\r\n        \r\n        const { addService } = this.props;\r\n        console.table(model);\r\n        console.table();\r\n\r\n        addService(model);\r\n        console.log(\"form posted\", model)\r\n    }\r\n\r\n    handler = (e) => {\r\n        switch (e.target.dataset.type) {\r\n            case \"edit\":\r\n                this.setState({ isEdit: true });\r\n                break;\r\n            case \"delete\":\r\n                // DELETE\r\n                break;\r\n            case \"cancel\":\r\n                const { editToggle } = this.props;\r\n                editToggle();\r\n                this.setState({ isEdit: false });\r\n                break;\r\n            case \"confirm\":\r\n                this.setState({ isEdit: false });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { isEdit } = this.props;\r\n        return (\r\n            <>\r\n                <Formsy className='form' onValidSubmit={isEdit ? this.onSubmitEdit : this.onSubmit} onValid={this.enableButton} onInvalid={this.disableButton} className={st.grid}>\r\n                    <MyInput label=\"Название услуги\" type=\"text\" name=\"title\" validations=\"isWords\" validationErrors={errors} placeholder=\"Введите название...\" required />\r\n                    <MyInput label=\"Длительность\" type=\"text\" name=\"time\" validations=\"isNumeric\" validationErrors={errors} placeholder=\"Введите название...\" required />\r\n                    <MyInput label=\"Стоимость\" type=\"text\" name=\"price\" validations=\"isNumeric\" validationErrors={errors} placeholder=\"Введите название...\" required />\r\n                    {isEdit ?\r\n                        <div className={st.flex}>\r\n                            <button type=\"submit\" data-type=\"confirm\" className={st.btn} disabled={!this.state.canSubmit}>\r\n                                ✔\r\n                            </button>\r\n                            <button onClick={this.handler} data-type=\"cancel\" className={st.btn}>❌</button>\r\n                        </div>\r\n                        :\r\n                        <button data-type=\"cancel\" type=\"submit\" className={st.btn} disabled={!this.state.canSubmit}>Добавить </button>\r\n                    }\r\n                </Formsy>\r\n            </>\r\n        )\r\n    }\r\n}\r\n// onClick={this.props.handler}\r\n// ServiceForm.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     time: PropTypes.number.isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n// }\r\n// ServiceForm.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     completed: PropTypes.bool.isRequired,\r\n//     toggleCompleted: PropTypes.func.isRequired,\r\n//     // id: PropTypes.number.isRequired\r\n// }\r\nexport default ServiceForm;\r\n","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\api\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\MyInput.jsx",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\Button.jsx",["102"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport st from './Button.module.scss';\r\nimport classNames from 'classnames';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { props }\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        const { btnType } = this.props; \r\n        switch (btnType){\r\n            case 'edit':\r\n                break;\r\n            case 'delete':\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n        render() {\r\n            const { type, label } = this.props;\r\n            const { handleClick } = this.props;\r\n            return (\r\n                <button onClick={handleClick} className={classNames(`${st.btn}`, { [`btn__${type}`]: true })}>{label}</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    export default Button;\r\n","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\WorkdaysForm\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\WorkdaysForm\\WorkdaysForm.jsx",["103","104","105","106"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\Workdays.jsx",["107","108","109","110"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\Calendar\\Calendar.jsx",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Workdays\\CalendarAdmin\\CalendarAdmin.jsx",["111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":51,"column":15,"nodeType":"123","messageId":"124","endLine":51,"endColumn":19},{"ruleId":"121","severity":1,"message":"126","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"127","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"115","replacedBy":"128"},{"ruleId":"117","replacedBy":"129"},{"ruleId":"115","replacedBy":"130"},{"ruleId":"117","replacedBy":"131"},{"ruleId":"121","severity":1,"message":"126","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":5,"column":18,"nodeType":"123","messageId":"124","endLine":5,"endColumn":35},{"ruleId":"121","severity":1,"message":"133","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":94,"column":160,"nodeType":"136","endLine":94,"endColumn":179},{"ruleId":"121","severity":1,"message":"126","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":5,"column":18,"nodeType":"123","messageId":"124","endLine":5,"endColumn":35},{"ruleId":"121","severity":1,"message":"133","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":137,"column":185,"nodeType":"136","endLine":137,"endColumn":204},{"ruleId":"121","severity":1,"message":"126","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"137","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":10},{"ruleId":"121","severity":1,"message":"133","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"138","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"139","line":2,"column":21,"nodeType":"123","messageId":"124","endLine":2,"endColumn":27},{"ruleId":"121","severity":1,"message":"140","line":13,"column":11,"nodeType":"123","messageId":"124","endLine":13,"endColumn":25},{"ruleId":"141","severity":2,"message":"142","line":14,"column":9,"nodeType":"123","messageId":"143","endLine":14,"endColumn":13},{"ruleId":"141","severity":2,"message":"144","line":17,"column":23,"nodeType":"123","messageId":"143","endLine":17,"endColumn":30},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"no-unused-vars","'classNames' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.",["145"],["146"],["145"],["146"],"'addValidationRule' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'st' is defined but never used.","'Calendar' is defined but never used.","'format' is defined but never used.","'timeInputProps' is assigned a value but never used.","no-undef","'date' is not defined.","undef","'setDate' is not defined.","no-global-assign","no-unsafe-negation"]