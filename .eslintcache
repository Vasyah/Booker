[{"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\index.js":"1","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Root.jsx":"2","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceList.jsx":"3","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Service.jsx":"4","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\index.js":"5","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\ServiceForm.jsx":"6","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\index.js":"7","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\api\\index.js":"8","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\MyInput.jsx":"9","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\index.js":"10","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\Button.jsx":"11","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\index.js":"12"},{"size":211,"mtime":1611308783575,"results":"13","hashOfConfig":"14"},{"size":271,"mtime":1611409653953,"results":"15","hashOfConfig":"14"},{"size":5018,"mtime":1611642162312,"results":"16","hashOfConfig":"14"},{"size":920,"mtime":1611642127679,"results":"17","hashOfConfig":"14"},{"size":40,"mtime":1611311118401,"results":"18","hashOfConfig":"14"},{"size":2966,"mtime":1611469509617,"results":"19","hashOfConfig":"14"},{"size":40,"mtime":1611317089222,"results":"20","hashOfConfig":"14"},{"size":128,"mtime":1611397346506,"results":"21","hashOfConfig":"14"},{"size":1122,"mtime":1611411347366,"results":"22","hashOfConfig":"14"},{"size":36,"mtime":1611404561979,"results":"23","hashOfConfig":"14"},{"size":497,"mtime":1611468523758,"results":"24","hashOfConfig":"14"},{"size":36,"mtime":1611311868074,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"64ipdh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\index.js",[],["54","55"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\Root.jsx",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceList.jsx",["56"],"import React from 'react';\r\nimport st from './ServiceList.module.scss';\r\n\r\nimport Service from './Service';\r\nimport ServiceForm from './ServiceForm';\r\n// import Button from './../Button'\r\nimport classNames from 'classnames';\r\nimport axiosConfig from '../../api/';\r\n\r\nclass ServiceList extends React.Component {\r\n\r\n    state = { services: [] };\r\n    // для сохранения контекста делаем метод - стрелочной функцией\r\n    addService = (service) => {\r\n        // если хотя бы одно поле пустое - то не пишем\r\n        // задать типы\r\n        console.log(service);\r\n        axiosConfig\r\n            .post('/services', service)\r\n            .then(res => {\r\n                console.log(res);\r\n                const service = res.data.data;\r\n                this.setState(prevState => ({\r\n                    services: [\r\n                        ...prevState.services,\r\n                        { ...service }\r\n                    ]\r\n                }));\r\n                if (res.status === \"OK\") return true;\r\n            })\r\n    }\r\n\r\n    editService = (service) => {\r\n        console.log(service);\r\n        axiosConfig\r\n            .post('/services', service)\r\n            .then(res => {\r\n                console.log(res);\r\n                const serviceData = res.data.data;\r\n                const { id } = serviceData;\r\n                this.setState(prevState => ({\r\n                    services: [\r\n                        prevState.services.forEach(service => {\r\n                            const isExist = service.id === id\r\n                            if (isExist) {\r\n                                service = serviceData;\r\n                            }\r\n                            return service\r\n                        }),\r\n                    ]\r\n                }));\r\n                if (res.status === \"OK\") return true;\r\n            })\r\n    }\r\n    // rmService() {\r\n\r\n    // }\r\n    // saveService() {\r\n\r\n    // }\r\n    componentDidMount() {\r\n        axiosConfig\r\n            .get('/services').then(response => {\r\n                console.log(response.data.data);\r\n                this.setState({ services: response.data.data });\r\n            })\r\n            .catch(() => this.setState({ message: 'NETWORK_ERROR', loading: false }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <h3 className={st.title}>Добавьте свои услуги</h3>\r\n                <ServiceForm addService={this.addService} />\r\n                <Service\r\n                    title=\"Название услуги\"\r\n                    time=\"Длительность\"\r\n                    price=\"Стоимость\"\r\n                />\r\n                {this.state.services.map(({ id, title, time, price }) => (\r\n                    <Service\r\n                        isEdit={true}\r\n                        title={title}\r\n                        time={time}\r\n                        price={price}\r\n                        key={id}\r\n                    />\r\n                ))}\r\n                {/* <saveButton/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ServiceList;\r\n\r\n\r\n\r\n\r\n\r\n    // // state = { tasks };\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state =  { tasks };\r\n    // }\r\n    // filterActive = () => {\r\n    //     const activeTasks = this.state.tasks.filter(task => !task.completed);\r\n    //     this.setState({ tasks: activeTasks });\r\n    // }\r\n\r\n    // toggleCompleted = (event) => {\r\n    //     const { tasks } = this.state;\r\n    //     const id = Number(event.target.dataset.id);\r\n    //     const updatedTasks = tasks.map(task => {\r\n    //         if (task.id === id) {\r\n    //             task.completed = !task.completed\r\n    //         }\r\n    //         return task;\r\n    //     });\r\n    //     this.setState({ tasks: updatedTasks });\r\n    // }\r\n\r\n    // addTask = title => {\r\n    //     this.setState(prevState => ({\r\n    //         // взяли старый объект и записали новй\r\n    //         // но затем будем делать запросы на сервак\r\n    //         tasks: [\r\n    //             ...prevState.tasks,\r\n    //             { id: Math.random(), title, completed: false }\r\n    //         ]\r\n    //     }))\r\n    // }\r\n    // render() {\r\n    //     return (\r\n    //         <div className=\"tasks-list\">\r\n    //             <TaskForm addTask={this.addTask} />\r\n    //             {this.state.tasks.map(({ title, completed, id }) => (\r\n    //                 <Task\r\n    //                     title={title}\r\n    //                     completed={completed}\r\n    //                     toggleCompleted={this.toggleCompleted}\r\n    //                     id={id}\r\n    //                     key={id}\r\n    //                 />\r\n    //             ))}\r\n    //             <Button label=\"Выполненны\" onClick={this.filterActive} />\r\n    //         </div>\r\n    //     );\r\n    // }","E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Service.jsx",["57"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\ServiceForm.jsx",["58","59","60","61"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\ServiceForm\\index.js",[],["62","63"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\api\\index.js",[],["64","65"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\MyInput.jsx",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\MyInput\\index.js",[],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\Button\\Button.jsx",["66","67"],"E:\\Repository\\Courses\\FocusStart\\react\\booker\\src\\components\\ServiceList\\Service\\index.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"77","line":5,"column":18,"nodeType":"74","messageId":"75","endLine":5,"endColumn":35},{"ruleId":"72","severity":1,"message":"78","line":7,"column":10,"nodeType":"74","messageId":"75","endLine":7,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":59,"column":131,"nodeType":"81","endLine":59,"endColumn":150},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"68","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","severity":1,"message":"76","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":17},{"ruleId":"72","severity":1,"message":"86","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":10},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'classNames' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'addValidationRule' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["87"],["88"],["87"],["88"],"'st' is defined but never used.","no-global-assign","no-unsafe-negation"]